{"version":3,"file":"WindowLocationContext.native.js","sourceRoot":"","sources":["../../../src/rsc/router/WindowLocationContext.native.tsx"],"names":[],"mappings":";AAAA;;;;;GAKG;AACH,iDAAiD;;;;;;;;;;;;;;;;;;;;;;;;;;AAEjD,6CAA+B;AAE/B,sEAAuE;AACvE,gDAAqE;AAErE,MAAM,QAAQ,GAAG,KAAK,CAAC,aAAa,CAEjC,EAAE,UAAU,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE,CAAC,CAAC;AAE7B,SAAS,SAAS,CAAC,GAAQ;IACzB,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,UAAU,IAAI,GAAG,EAAE;QAChD,OAAO,GAAU,CAAC;KACnB;IACD,IAAI;QACF,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;KACrB;IAAC,MAAM;QACN,OAAO,IAAI,GAAG,CAAC,GAAG,EAAE,uBAAuB,CAAC,CAAC;KAC9C;AACH,CAAC;AACD,MAAM,MAAM,GAAG,CAAC,GAAW,EAAE,EAAE;IAC7B,MAAM,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IACzB,UAAU,CAAC,mBAAmB,GAAG,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,SAAgB,eAAe,CAAC,EAAE,QAAQ,EAAoC;IAC5E,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAElD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,CAAC,KAAK,IAAI,EAAE;YACV,MAAM,CAAC,GAAG,MAAM,IAAA,uBAAa,GAAE,CAAC;YAEhC,MAAM,CAAC,IAAA,2CAAsB,EAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;YAE/C,SAAS,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,EAAE,CAAC;QAEL,OAAO,IAAA,0BAAgB,EAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE;YAClC,MAAM,CAAC,IAAA,2CAAsB,EAAC,GAAG,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,CAAC,QAAQ,CAAC,QAAQ,CAChB,KAAK,CAAC,CAAC;YACL,UAAU,CAAC,MAAM,EAAE,GAAG;gBACpB,IAAI,MAAM,KAAK,WAAW,EAAE;oBAC1B,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACxB;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;iBACjD;YACH,CAAC;SACF,CAAC,CACF;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,QAAQ,CAAC,QAAQ,CAAC,CACrB,CAAC;AACJ,CAAC;AAnCD,0CAmCC;AAED,SAAgB,kBAAkB;IAChC,OAAO,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACpC,CAAC;AAFD,gDAEC","sourcesContent":["/**\n * Copyright Â© 2024 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Emulates the window.location object on native.\n\nimport * as React from 'react';\n\nimport { extractExpoPathFromURL } from '../../fork/extractPathFromURL';\nimport { getInitialURL, addEventListener } from '../../link/linking';\n\nconst Location = React.createContext<{\n  setHistory: (method: string, url: string | URL) => void;\n}>({ setHistory: () => {} });\n\nfunction coerceUrl(url: any) {\n  if (typeof url === 'object' && 'pathname' in url) {\n    return url as URL;\n  }\n  try {\n    return new URL(url);\n  } catch {\n    return new URL(url, 'http://localhost:8081');\n  }\n}\nconst setUrl = (url: string) => {\n  const v = coerceUrl(url);\n  globalThis.expoVirtualLocation = v;\n};\n\nexport function LocationContext({ children }: { children: React.ReactElement }) {\n  const [loaded, setLoaded] = React.useState(false);\n\n  React.useEffect(() => {\n    (async () => {\n      const v = await getInitialURL();\n\n      setUrl(extractExpoPathFromURL(v ?? undefined));\n\n      setLoaded(true);\n    })();\n\n    return addEventListener({})((url) => {\n      setUrl(extractExpoPathFromURL(url));\n    });\n  }, []);\n\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <Location.Provider\n      value={{\n        setHistory(method, url) {\n          if (method === 'pushState') {\n            setUrl(url.toString());\n          } else {\n            console.warn('Only pushState is supported atm');\n          }\n        },\n      }}>\n      {children}\n    </Location.Provider>\n  );\n}\n\nexport function useVirtualLocation() {\n  return React.useContext(Location);\n}\n"]}